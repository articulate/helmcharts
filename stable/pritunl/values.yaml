# Health Checks
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

# Image Settings
image:
  registry: docker.io
  repository: eb129/pritunl
  tag: v2
  pullPolicy: Always

# Mongo Settings
mongo:
  # This should match whatever the 'mongodb' service is called in the cluster.
  # DNS should be able to resolve the service by this name for Pritunl to function.
  serviceName: "pritunl-mongodb"
  useLocalDB: false

# Service Port Settings
ports:
  http: 80
  vpn: 1194
  webui: 443

# This must be enabled when using Pritunl due to the rights that iptables will need in the Pritunl pods.
privileged:
  enabled: true

# This will adjust the replicas that are deployed as a part of the Pritunl deployment.
# This is '3' by default. Your Pritunl cluster number will be affected by this.
replicaCount: 3

# If 'type' here is 'LoadBalancer', these annotations are necessary to properly use an ELB if deploying this chart in AWS, so they'll automatically get used.
# Be sure to add the appropriate domain name, cert ARN, and ssl-negotiation-policy (a default is used here).
service:
  annotations:
    external-dns.alpha.kubernetes.io/hostname: "pritunl.mydomain.com"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1::certificate/1234"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: webui
    service.beta.kubernetes.io/aws-load-balancer-ssl-negotiation-policy: "ELBSecurityPolicy-TLS-1-2-2017-01"
  type: LoadBalancer

tty:
  enabled: true
